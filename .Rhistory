ylab = 'Survival', main = ''){
library(ggplot2)
strata <- ifelse(is.null(s$strata) ==T, 1, length(s$strata))
stopifnot(length(surv.col) == 1 | length(surv.col) == strata)
stopifnot(length(lty.est) == 1 | length(lty.est) == strata)
ggsurv.s <- function(s, CI = 'def', plot.cens = T, surv.col = 'gg.def',
cens.col = 'red', lty.est = 1, lty.ci = 2,
cens.shape = 3, back.white = F, xlab = 'Time',
ylab = 'Survival', main = ''){
dat <- data.frame(time = c(0, s$time),
surv = c(1, s$surv),
up = c(1, s$upper),
low = c(1, s$lower),
cens = c(0, s$n.censor))
dat.cens <- subset(dat, cens != 0)
col <- ifelse(surv.col == 'gg.def', 'black', surv.col)
pl <- ggplot(dat, aes(x = time, y = surv)) +
xlab(xlab) + ylab(ylab) + ggtitle(main) +
geom_step(col = col, lty = lty.est)
pl <- if(CI == T | CI == 'def') {
pl + geom_step(aes(y = up), color = col, lty = lty.ci) +
geom_step(aes(y = low), color = col, lty = lty.ci)
} else (pl)
pl <- if(plot.cens == T & length(dat.cens) > 0){
pl + geom_point(data = dat.cens, aes(y = surv), shape = cens.shape,
col = cens.col)
} else if (plot.cens == T & length(dat.cens) == 0){
stop ('There are no censored observations')
} else(pl)
pl <- if(back.white == T) {pl + theme_bw()
} else (pl)
pl
}
ggsurv.m <- function(s, CI = 'def', plot.cens = T, surv.col = 'gg.def',
cens.col = 'red', lty.est = 1, lty.ci = 2,
cens.shape = 3, back.white = F, xlab = 'Time',
ylab = 'Survival', main = '') {
n <- s$strata
groups <- factor(unlist(strsplit(names
(s$strata), '='))[seq(2, 2*strata, by = 2)])
gr.name <-  unlist(strsplit(names(s$strata), '='))[1]
gr.df <- vector('list', strata)
ind <- vector('list', strata)
n.ind <- c(0,n); n.ind <- cumsum(n.ind)
for(i in 1:strata) ind[[i]] <- (n.ind[i]+1):n.ind[i+1]
for(i in 1:strata){
gr.df[[i]] <- data.frame(
time = c(0, s$time[ ind[[i]] ]),
surv = c(1, s$surv[ ind[[i]] ]),
up = c(1, s$upper[ ind[[i]] ]),
low = c(1, s$lower[ ind[[i]] ]),
cens = c(0, s$n.censor[ ind[[i]] ]),
group = rep(groups[i], n[i] + 1))
}
dat <- do.call(rbind, gr.df)
dat.cens <- subset(dat, cens != 0)
pl <- ggplot(dat, aes(x = time, y = surv, group = group)) +
xlab(xlab) + ylab(ylab) + ggtitle(main) +
geom_step(aes(col = group, lty = group))
col <- if(length(surv.col == 1)){
scale_colour_manual(name = gr.name, values = rep(surv.col, strata))
} else{
scale_colour_manual(name = gr.name, values = surv.col)
}
pl <- if(surv.col[1] != 'gg.def'){
pl + col
} else {pl + scale_colour_discrete(name = gr.name)}
line <- if(length(lty.est) == 1){
scale_linetype_manual(name = gr.name, values = rep(lty.est, strata))
} else {scale_linetype_manual(name = gr.name, values = lty.est)}
pl <- pl + line
pl <- if(CI == T) {
if(length(surv.col) > 1 && length(lty.est) > 1){
stop('Either surv.col or lty.est should be of length 1 in order
to plot 95% CI with multiple strata')
}else if((length(surv.col) > 1 | surv.col == 'gg.def')[1]){
pl + geom_step(aes(y = up, color = group), lty = lty.ci) +
geom_step(aes(y = low, color = group), lty = lty.ci)
} else{pl +  geom_step(aes(y = up, lty = group), col = surv.col) +
geom_step(aes(y = low,lty = group), col = surv.col)}
} else {pl}
pl <- if(plot.cens == T & length(dat.cens) > 0){
pl + geom_point(data = dat.cens, aes(y = surv), shape = cens.shape,
col = cens.col)
} else if (plot.cens == T & length(dat.cens) == 0){
stop ('There are no censored observations')
} else(pl)
pl <- if(back.white == T) {pl + theme_bw()
} else (pl)
pl
}
pl <- if(strata == 1) {ggsurv.s(s, CI , plot.cens, surv.col ,
cens.col, lty.est, lty.ci,
cens.shape, back.white, xlab,
ylab, main)
} else {ggsurv.m(s, CI, plot.cens, surv.col ,
cens.col, lty.est, lty.ci,
cens.shape, back.white, xlab,
ylab, main)}
pl
}
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
dateFormat = "%d/%m/%Y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
full$Socio.Econdate <- as.Date(full$Socio.Econdate, format=dateFormat)
setwd("~/Desktop/R/survival_Analysis")
source('~/.active-rstudio-document', echo=TRUE)
kable(list(table.socio, table.socio.prop))
table.BMI <- rbind(summary(transitioned$BMInew),
summary(censored$BMInew),
summary(full$BMInew)) #Summarizing the BMI
rownames(table.BMI) <- c("Trasnsitioned","Censored","All")
kable(table.BMI)
# Remove BMI outliers
new1 <- full[(full$BMInew > 15 && full$BMInew < 100), ]
ordered <- new1 %>%
arrange(Socio.Econdate)
View(ordered)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
dateFormat = "%d/%m/%Y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
full$Socio.Econdate <- as.Date(full$Socio.Econdate, format=dateFormat)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
dateFormat = "%d/%m/%Y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
dateFormat = "%d/%m/%Y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
View(full)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
View(full)
ass <- as.Date(full$Socio.Econdate, format=dateFormat)
head(ass)
head(full)
matches <- grep(pattern = "\/\d\d\d\d$", x=full$Socio.Econdate)
matches <- grep(pattern = "\/\d\d\d\d$", x=full$Socio.Econdate)
"\rrred"
matches <- grep(pattern = "\/\d\d\d\d$", x=full$Socio.Econdate, perl=t)
matches <- grep(pattern = "\/\d\d\d\d$", x=full$Socio.Econdate, perl=T)
matches <- grep(pattern = "\\/\d\d\d\d$", x=full$Socio.Econdate, perl=T)
matches <- grep(pattern = "\\/\\d\\d\\d\\d$", x=full$Socio.Econdate, perl=T)
matches
length(matches)
length(!matches)
length(!(seq(1, nrow(full) %in% matches))
)
!(seq(1, nrow(full) %in% matches)
)
!(seq(1, nrow(full)) %in% matches)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = "\\/\\d\\d\\d\\d$", x=full$Socio.Econdate, perl=T)
shortYear <- !(seq(1, nrow(full)) %in% matches)
full$Socio.Econdate[longYear] <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
full$Socio.Econdate[shortYear] <- as.Date(full$Socio.Econdate[shortYear], format=shortFormat)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = "\\/\\d\\d\\d\\d$", x=full$Socio.Econdate, perl=T)
shortYear <- !(seq(1, nrow(full)) %in% matches)
View(full[longYear])
View(full[longYear, ])
longYear <- grep(pattern = "\\/\\d\\d\\d\\d$", x=full$Socio.Econdate)
length(longYear)
longYear <- grep(pattern = "\\/\\d{4}$", x=full$Socio.Econdate)
length(longYear)
longYear <- grep(pattern = "\\d{4}$", x=full$Socio.Econdate)
longYear
length(longYear)
longYear <- grep(pattern = "\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
full$Socio.Econdate[longYear] <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
full$Socio.Econdate[shortYear] <- as.Date(full$Socio.Econdate[shortYear], format=shortFormat)
longYear <- grep(pattern = "\\d{4}$", x=full$Socio.Econdate)
full[longYear, ]
longYear <- grep(pattern = "\\d{4}$", x=full$Socio.Econdate)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = "\\d{4}$", x=full$Socio.Econdate)
ass <- full[longYear, ]
head(ass)
View(ass)
shortYear <- !(seq(1, nrow(full)) %in% matches)
as.Date(full$Socio.Econdate[longYear], format=longFormat)
as.Date(full$Socio.Econdate[shortYear], format=shortFormat)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = "\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
full$Socio.Econdate[longYear] <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
full$Socio.Econdate[shortYear] <- as.Date(full$Socio.Econdate[shortYear], format=shortFormat)
View(full)
head(full)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = "\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
as.Date(full$Socio.Econdate[longYear], format=longFormat)
full$Socio.Econdate <- as.Date(full$Socio.Econdate)
full$Socio.Econdate[longYear] <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
full$Socio.Econdate[shortYear] <- as.Date(full$Socio.Econdate[shortYear], format=shortFormat)
head(full)
as.Date(full$Socio.Econdate[longYear], format=longFormat)
qwe <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
View(qwe)
qwe
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = "\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
full$Socio.Econdate <- as.Date(full$Socio.Econdate)
full$Socio.Econdate[longYear] <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
full$Socio.Econdate[shortYear] <- as.Date(full$Socio.Econdate[shortYear], format=shortFormat)
head(full)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = "\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
full$Socio.Econdate <- NULL
full$Socio.Econdate[longYear] <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
full$Socio.Econdate[shortYear] <- as.Date(full$Socio.Econdate[shortYear], format=shortFormat)
full$Socio.Economic <- NA
full$Socio.Econdate <- as.Date(full$Socio.Econdate)
full$Socio.Econdate[longYear] <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = "\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
full$Socio.Econdate <- as.Date(full$Socio.Econdate)
full$Socio.Econdate[longYear] <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
full$Socio.Econdate[shortYear] <- as.Date(full$Socio.Econdate[shortYear], format=shortFormat)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = ".+\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
longYear <- grep(pattern = ".+\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
length(longYear)
full$Socio.Econdate[longYear]
tail(full$Socio.Econdate[longYear])
head(full$Socio.Econdate[longYear])
full$Socio.Econdate <- ""
full$Socio.Econdate <- as.Date(full$Socio.Econdate)
full$Socio.Econdate[longYear] <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
full$Socio.Econdate[shortYear] <- as.Date(full$Socio.Econdate[shortYear], format=shortFormat)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = ".+\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
full$Socio.Econdate <- ""
full$Socio.Econdate <- as.Date(full$Socio.Econdate)
full$Socio.Econdate[longYear] <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
full$Socio.Econdate[shortYear] <- as.Date(full$Socio.Econdate[shortYear], format=shortFormat)
head(full)
tail(full)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = ".+\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
full$Socio.Econdate <- as.Date(full$Socio.Econdate)
full$Socio.Econdate[longYear] <- as.Date(full$Socio.Econdate[longYear], format=longFormat)
full$Socio.Econdate[shortYear] <- as.Date(full$Socio.Econdate[shortYear], format=shortFormat)
head(full)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = ".+\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
longYear <- grep(pattern = ".+\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
long <- full[longYear]
short <- full[shortYear]
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = ".+\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
long <- full[longYear]
short <- full[shortYear]
long <- full[longYear, ]
short <- full[shortYear, ]
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = ".+\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
long <- full[longYear, ]
short <- full[shortYear, ]
short$Socio.Econdate <- as.Date(short$Socio.Econdate, format=shortFormat)
long$Socio.Econdate <- as.Date(long$Socio.Econdate, format=longFormat)
View(short)
View(ling)
View(long)
long <- rbind(long, short)
# Load and join data
transitioned <- read.csv(file="transitioned.csv", header=T)
censored <- read.csv(file="censored.csv", header=T)
full <- rbind(transitioned, censored)
# Recode the event column -- otherwise it is treated incorrectly
full$Partial_code_ff <- as.numeric(full$Partial_code_ff)    # Coerce the event variable to numeric
full$event <- ifelse(full$Partial_code_ff == 1, 1, 0)
# Coerce date columns to date types
longFormat = "%d/%m/%Y"
shortFormat = "%d/%m/%y"
full$Socio.Econdate <- as.character(full$Socio.Econdate)
full$Socio.Econdate <- ifelse(full$Socio.Econdate != "", full$Socio.Econdate, NA)
longYear <- grep(pattern = ".+\\d{4}$", x=full$Socio.Econdate)
shortYear <- !(seq(1, nrow(full)) %in% matches)
long <- full[longYear, ]
short <- full[shortYear, ]
long$Socio.Econdate <- as.Date(long$Socio.Econdate, format=longFormat)
short$Socio.Econdate <- as.Date(short$Socio.Econdate, format=shortFormat)
full <- rbind(long, short)
nrow(full)
ordered <- new1 %>%
arrange(Socio.Econdate)
duplicates <- duplicated(new1$UNQID_tmp)
duplicates
sum(duplicates == 1)
duplicates <- duplicated(ordered$UNQID_tmp)
new1 <- full[(full$BMInew > 15 && full$BMInew < 100), ]
# Remove duplicate observations, retain earliest record
ordered <- new1 %>%
arrange(Socio.Econdate)
duplicates <- duplicated(ordered$UNQID_tmp)
new2 <- ordered[!duplicates, ]
head(new2)
sum(duplicated(new2$uniq))
sum(duplicated(new2$UNQID_tmp))
a <- "asssss"
print(xtable(table.sex, type="html", file="sex.tex", floating=F))
source('~/.active-rstudio-document', echo=TRUE)
print(xtable(table.sex, type="html", file="sex.tex", floating=F))
setwd("report/")
print(xtable(table.sex, type="html", file="sex.tex", floating=F))
setwd("~/Documents/Spring/PSTAT 196/")
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("~/Desktop/R/survival_Analysis/")
source('~/.active-rstudio-document', echo=TRUE)
getwd()
print(xtable(table.sex, type="html", file="sex.tex", floating=F))
cat(c(
"\\begin{multicols}{2}",
k1,
"\\columnbreak",
k2,
"\\end{multicols}"
))
k1 <- kable(table.sex, caption=1, format="latex")
k2 <- kable(table.sex.prop, caption=1, format="latex")
cat(c(
"\\begin{multicols}{2}",
k1,
"\\columnbreak",
k2,
"\\end{multicols}"
))
kable(table.sex, caption=1, format="latex")
